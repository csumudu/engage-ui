// Increased to account for chip height
$controlHeight: control-height() + rem(8px);
$backdrop-horizontal-spacing: spacing(tight) * 1.5;

$stacking-order: (
  suggestions: 30,
  input: 20,
  backdrop: 10,
);


// AutoSuggestText Component

.containerWrapper {
  width: 100%;
  border-radius: 5px;
  cursor: text;
  min-height: 25px;
  z-index: z-index(input, $stacking-order);
  
  &.empty {
    min-width: 100px;

    > .container {
      width:100%;
    }
  }

  //TODO: Consider using Stack component instead of adding margin.
  .Chip {
    margin-top: control-vertical-padding();
    margin-right: control-vertical-padding();
  }
}

.container {
  display: inline-block;
  //overflow: hidden;
  text-overflow: ellipsis;
}

.input {
  @include text-style-input;
  position: relative;
  display: block;
  flex: 1 1 0%;
  width: 100%;
  min-height: $controlHeight;
  margin: 0;
  padding: control-vertical-padding() 0;
  background: none;
  border: border(transparent);
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  appearance: none;

  &:disabled {
    color: color(ink, lightest);
  }

  &:focus {
    outline: none;
  }

  &::placeholder {
    color: color(ink, lightest);
  }
}

.suggestionsList {
  position: absolute;
  margin: 0;
  padding: 0;
  background: color(white);
  list-style-type: none;
  z-index: z-index(input, $stacking-order);
}


// Card Component
.avatarImage {
  border-radius: 50%;
  width: rem(40px);
  height: rem(40px);
}



// Continue from here



.cardBorder {
  width: 400px;
  background-color: white;
  margin: 0;
  padding: 0;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}
.check {
  width: 100px;
}
.cardElem {
  align-items: center;
  margin: 5px 5px 5px 5px;
  white-space: pre;
}
.cardItem {
  z-index: 2;
}





.autosuggestInput {
  border: none;
  background-color: transparent;
  display: inline-block;
  font-size: 1.3rem;
  color: #212121;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 200px;
  padding-left: 7px;
}

.autosuggestInput:focus {
  outline: none;
}

.nameStyle {
  width: 100px;
}
.emailStyle {
  width: 240px; 
  color: rgba(0, 0, 0, 0.54);
}
.grey {
  background-color: #eeeeee;
}




// TODO: revisit
.customPlaceholder {
  position: absolute;
  font-size: 13px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.23;
  letter-spacing: normal;
  color: #616161;
}


.pickerResultShow{display:block;}
.pickerResultHide{display:none;}



// AutoSuggest Component

.backdropAutosuggest {
  z-index: 1;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: color(white);
  border: border(dark);
  box-shadow: inset 0 1px 0 0 rgba(color(ink, lighter), 0.05);
  border-radius: border-radius();
  will-change: box-shadow;
  transition: box-shadow duration() easing();
}